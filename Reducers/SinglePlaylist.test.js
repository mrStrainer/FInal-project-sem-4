import SinglePlaylist from './SinglePlaylist'

describe('SinglePlaylist reducer', () => {
	it('should deal with initial state', () => {
		expect(
			SinglePlaylist(undefined,{})
		).toEqual({
			isFetchingInfo:false,
			isFetchingTracks:false,
			isFetchingMoreTracks:false
		})
	})

	it('Should deal with REQUEST_SINGLE_PLAYLIST_INFO', () => {
		expect(
			SinglePlaylist(undefined,{
				type:'REQUEST_SINGLE_PLAYLIST_INFO'
			})
		).toEqual({
			isFetchingInfo:true,
			isFetchingTracks:false,
			isFetchingMoreTracks:false
		})
	})

	it('Should deal with REQUEST_SINGLE_PLAYLIST_INFO', () => {
		expect(
			SinglePlaylist({
				isFetchingInfo:true,
				isFetchingTracks:false,
				isFetchingMoreTracks:false
			},{
				type:'REQUEST_SINGLE_PLAYLIST_INFO'
			})
		).toEqual({
			isFetchingInfo:true,
			isFetchingTracks:false,
			isFetchingMoreTracks:false
		})
	})

	it('Should deal with RECEIVE_SINGLE_PLAYLIST_INFO', () => {
		expect(
			SinglePlaylist({
				isFetchingInfo:true,
				isFetchingTracks:false,
				isFetchingMoreTracks:false
			},{
				type:'RECEIVE_SINGLE_PLAYLIST_INFO',
				playlistInfo:{
					name:'name',
					id:'id',
					description:'description',
					owner:'oId',
					followers:0,
					total:0,
					offset:0
				}
			})
		).toEqual({
			isFetchingInfo:false,
			isFetchingTracks:false,
			isFetchingMoreTracks:false,
			info:{
				name:'name',
				id:'id',
				description:'description',
				owner:'oId',
				followers:0,
				total:0,
				offset:0
			}
		})
	})

	it('Should deal with REQUEST_SINGLE_PLAYLIST_TRACKS', () => {
		expect(
			SinglePlaylist({
				isFetchingInfo:false,
				isFetchingTracks:false,
				isFetchingMoreTracks:false
			},{
				type:'REQUEST_SINGLE_PLAYLIST_TRACKS',
				userId:'id',
				playlistId:'id'
			})
		).toEqual({
			isFetchingInfo:false,
			isFetchingTracks:true,
			isFetchingMoreTracks:false
		})
	})

	it('Should deal with RECEIVE_SINGLE_PLAYLIST_TRACKS', () => {
		expect(
			SinglePlaylist({
				isFetchingInfo:false,
				isFetchingTracks:true,
				isFetchingMoreTracks:false,
				info:{
					name:'name',
					id:'id',
					description:'description',
					owner:'oId',
					followers:0,
					total:1,
					offset:0
				}
			},{
				type:'RECEIVE_SINGLE_PLAYLIST_TRACKS',
				tracks:{
					offset:0,
					tracks:[{
						id:'id',
						name:'name',
						duration_ms:320,
						added_by:'id',
						album:{
							id:'id',
							name:'name'
						},
						artists:[{
							id:'id',
							name:'name'
						}]
					}]
				}
			})
		).toEqual({
			isFetchingInfo:false,
			isFetchingTracks:false,
			isFetchingMoreTracks:false,
			info:{
				name:'name',
				id:'id',
				description:'description',
				owner:'oId',
				followers:0,
				total:1,
				offset:0
			},
			tracks:[{
				id:'id',
				name:'name',
				duration_ms:320,
				added_by:'id',
				album:{
					id:'id',
					name:'name'
				},
				artists:[{
					id:'id',
					name:'name'
				}]
			}]
		})
	})

	it('Should deal with REQUEST_MORE_SINGLE_PLAYLIST_TRACKS', () => {
		expect(
			SinglePlaylist({
				isFetchingInfo:false,
				isFetchingTracks:false,
				isFetchingMoreTracks:false
			},{
				type:'REQUEST_MORE_SINGLE_PLAYLIST_TRACKS',
			})
		).toEqual({
			isFetchingInfo:false,
			isFetchingTracks:false,
			isFetchingMoreTracks:true
		})
	})

	it('Should deal with RECEIVE_MORE_SINGLE_PLAYLIST_TRACKS', () => {
		expect(
			SinglePlaylist({
				isFetchingInfo:false,
				isFetchingTracks:false,
				isFetchingMoreTracks:true,
				info:{
					name:'name',
					id:'id',
					description:'description',
					owner:'oId',
					followers:0,
					total:1,
					offset:0
				},
				tracks:[{
					id:'id',
					name:'name',
					duration_ms:320,
					added_by:'id',
					album:{
						id:'id',
						name:'name'
					},
					artists:[{
						id:'id',
						name:'name'
					}]
				}]
			},{
				type:'RECEIVE_MORE_SINGLE_PLAYLIST_TRACKS',
				tracks:{
					offset:15,
					tracks:[{
						id:'id2',
						name:'name2',
						duration_ms:320,
						added_by:'id2',
						album:{
							id:'id2',
							name:'name2'
						},
						artists:[{
							id:'id',
							name:'name'
						}]
					}]
				}
			})
		).toEqual({
			isFetchingInfo:false,
			isFetchingTracks:false,
			isFetchingMoreTracks:false,
			info:{
				name:'name',
				id:'id',
				description:'description',
				owner:'oId',
				followers:0,
				total:1,
				offset:15
			},
			tracks:[{
				id:'id',
				name:'name',
				duration_ms:320,
				added_by:'id',
				album:{
					id:'id',
					name:'name'
				},
				artists:[{
					id:'id',
					name:'name'
				}]
			},{
				id:'id2',
				name:'name2',
				duration_ms:320,
				added_by:'id2',
				album:{
					id:'id2',
					name:'name2'
				},
				artists:[{
					id:'id',
					name:'name'
				}]
			}]
		})
	})

})